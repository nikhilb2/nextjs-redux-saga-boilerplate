{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilbhatia/Documents/projects/nextRedux/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport { wrapper } from \"../components/store\";\n\nclass WrappedApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\n_defineProperty(WrappedApp, \"getInitialProps\", async ({\n  Component,\n  ctx\n}) => {\n  // Keep in mind that this will be called twice on server, one for page and second for error page\n  ctx.store.dispatch({\n    type: \"APP\",\n    payload: \"was set in _app\"\n  });\n  return {\n    pageProps: _objectSpread(_objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {}), {}, {\n      // Some custom thing for all pages\n      appProp: ctx.pathname\n    })\n  };\n});\n\nexport default wrapper.withRedux(WrappedApp);","map":{"version":3,"sources":["/Users/nikhilbhatia/Documents/projects/nextRedux/pages/_app.tsx"],"names":["React","App","wrapper","WrappedApp","render","Component","pageProps","props","ctx","store","dispatch","type","payload","getInitialProps","appProp","pathname","withRedux"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAiD,UAAjD;AACA,SAASC,OAAT,QAAwB,qBAAxB;;AAEA,MAAMC,UAAN,SAAyBF,GAAzB,CAA8C;AAiBrCG,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WAAO,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AApB2C;;gBAAxCH,U,qBAC4B,OAAO;AAAEE,EAAAA,SAAF;AAAaG,EAAAA;AAAb,CAAP,KAA0C;AACxE;AACAA,EAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAnB;AAEA,SAAO;AACLN,IAAAA,SAAS,kCAEHD,SAAS,CAACQ,eAAV,GACA,MAAMR,SAAS,CAACQ,eAAV,CAA0BL,GAA1B,CADN,GAEA,EAJG;AAKP;AACAM,MAAAA,OAAO,EAAEN,GAAG,CAACO;AANN;AADJ,GAAP;AAUD,C;;AAQH,eAAeb,OAAO,CAACc,SAAR,CAAkBb,UAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport App, { AppInitialProps, AppContext } from \"next/app\";\nimport { wrapper } from \"../components/store\";\n\nclass WrappedApp extends App<AppInitialProps> {\n  public static getInitialProps = async ({ Component, ctx }: AppContext) => {\n    // Keep in mind that this will be called twice on server, one for page and second for error page\n    ctx.store.dispatch({ type: \"APP\", payload: \"was set in _app\" });\n\n    return {\n      pageProps: {\n        // Call page-level getInitialProps\n        ...(Component.getInitialProps\n          ? await Component.getInitialProps(ctx)\n          : {}),\n        // Some custom thing for all pages\n        appProp: ctx.pathname\n      }\n    };\n  };\n\n  public render() {\n    const { Component, pageProps } = this.props;\n    return <Component {...pageProps} />;\n  }\n}\n\nexport default wrapper.withRedux(WrappedApp);\n"]},"metadata":{},"sourceType":"module"}