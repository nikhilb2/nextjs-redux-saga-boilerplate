{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const reducer = (state = {\n  app: \"init\",\n  page: \"init\"\n}, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      if (action.payload.app === \"init\") delete action.payload.app;\n      if (action.payload.page === \"init\") delete action.payload.page;\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case \"APP\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        app: action.payload\n      });\n\n    case \"PAGE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        page: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/nikhilbhatia/Documents/projects/nextRedux/components/reducer.tsx"],"names":["HYDRATE","reducer","state","app","page","action","type","payload"],"mappings":";;;;;;AACA,SAASA,OAAT,QAAwB,oBAAxB;AAOA,OAAO,MAAMC,OAAO,GAAG,CACrBC,KAAY,GAAG;AAAEC,EAAAA,GAAG,EAAE,MAAP;AAAeC,EAAAA,IAAI,EAAE;AAArB,CADM,EAErBC,MAFqB,KAGlB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAL;AACE,UAAIK,MAAM,CAACE,OAAP,CAAeJ,GAAf,KAAuB,MAA3B,EAAmC,OAAOE,MAAM,CAACE,OAAP,CAAeJ,GAAtB;AACnC,UAAIE,MAAM,CAACE,OAAP,CAAeH,IAAf,KAAwB,MAA5B,EAAoC,OAAOC,MAAM,CAACE,OAAP,CAAeH,IAAtB;AACpC,6CAAYF,KAAZ,GAAsBG,MAAM,CAACE,OAA7B;;AACF,SAAK,KAAL;AACE,6CAAYL,KAAZ;AAAmBC,QAAAA,GAAG,EAAEE,MAAM,CAACE;AAA/B;;AACF,SAAK,MAAL;AACE,6CAAYL,KAAZ;AAAmBE,QAAAA,IAAI,EAAEC,MAAM,CAACE;AAAhC;;AACF;AACE,aAAOL,KAAP;AAVJ;AAYD,CAhBM","sourcesContent":["import { AnyAction } from \"redux\";\nimport { HYDRATE } from \"next-redux-wrapper\";\n\nexport interface State {\n  app: string;\n  page: string;\n}\n\nexport const reducer = (\n  state: State = { app: \"init\", page: \"init\" },\n  action: AnyAction\n) => {\n  switch (action.type) {\n    case HYDRATE:\n      if (action.payload.app === \"init\") delete action.payload.app;\n      if (action.payload.page === \"init\") delete action.payload.page;\n      return { ...state, ...action.payload };\n    case \"APP\":\n      return { ...state, app: action.payload };\n    case \"PAGE\":\n      return { ...state, page: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}