{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(requestSignin),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(requestLogout),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(requestRestoreSession),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(restoreSessionSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(signinSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(mainSaga);\n\nimport { actions } from './constants';\nimport { signinsuccess, signinfailed, restoreSessionSuccess, logoutDone } from './actions';\nimport { call, put, all, takeLatest } from 'redux-saga/effects';\nimport request from '../../request';\nimport { login, logout, currentSession } from './UserSession';\nvar SIGNIN = actions.SIGNIN,\n    RESTORE_SESSION = actions.RESTORE_SESSION,\n    LOGOUT = actions.LOGOUT;\n\nfunction requestSignin(action) {\n  var credentials, requestURL, signin, data;\n  return _regeneratorRuntime.wrap(function requestSignin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          credentials = {\n            email: action.data.email.toLowerCase(),\n            password: action.data.password\n          };\n          console.log(credentials);\n          requestURL = '/api/auth/signin';\n          _context.next = 5;\n          return call(request, requestURL, 'POST', credentials);\n\n        case 5:\n          signin = _context.sent;\n          console.log('signin');\n          console.log(signin);\n\n          if (!signin.success) {\n            _context.next = 16;\n            break;\n          }\n\n          data = signin.data;\n          _context.next = 12;\n          return call(login, {\n            user: data.user,\n            jwt: data.token\n          });\n\n        case 12:\n          _context.next = 14;\n          return put(signinsuccess(data.user));\n\n        case 14:\n          _context.next = 18;\n          break;\n\n        case 16:\n          _context.next = 18;\n          return put(signinfailed(signin.message));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport function requestLogout(action) {\n  return _regeneratorRuntime.wrap(function requestLogout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(logout);\n\n        case 2:\n          _context2.next = 4;\n          return put(logoutDone());\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction requestRestoreSession(action) {\n  var session;\n  return _regeneratorRuntime.wrap(function requestRestoreSession$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return call(currentSession);\n\n        case 2:\n          session = _context3.sent;\n          console.log(session);\n          _context3.next = 6;\n          return put(restoreSessionSuccess(session));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction restoreSessionSaga() {\n  return _regeneratorRuntime.wrap(function restoreSessionSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(RESTORE_SESSION, requestRestoreSession);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction signinSaga() {\n  return _regeneratorRuntime.wrap(function signinSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(SIGNIN, requestSignin);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction logoutSaga() {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOGOUT, requestLogout);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction mainSaga() {\n  return _regeneratorRuntime.wrap(function mainSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([call(signinSaga), call(restoreSessionSaga), call(logoutSaga)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nexport default mainSaga;","map":{"version":3,"sources":["/Users/nikhilbhatia/Documents/projects/nextRedux/redux/auth/saga.ts"],"names":["requestSignin","requestLogout","requestRestoreSession","restoreSessionSaga","signinSaga","logoutSaga","mainSaga","actions","signinsuccess","signinfailed","restoreSessionSuccess","logoutDone","call","put","all","takeLatest","request","login","logout","currentSession","SIGNIN","RESTORE_SESSION","LOGOUT","action","credentials","email","data","toLowerCase","password","console","log","requestURL","signin","success","user","jwt","token","message","session"],"mappings":"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","sourcesContent":["import {\n    actions,\n    \n    \n    LogoutAction,\n    \n    RestoreSessionAction,\n    \n    SignInAction,\n    \n  } from './constants'\n  \n  import {\n    signinsuccess,\n    signinfailed,\n    restoreSessionSuccess,\n    logoutDone\n  } from './actions'\n  \n  import {\n    SignInVariables,\n    SignInResult,\n    \n  } from 'apiTypes'\n  \n  import { call, put, all, takeLatest, select } from 'redux-saga/effects'\n  \n  import request, {\n    RequestReturnParam,\n    RequestSuccess,\n    RequestFail,\n    requestUploadImage,\n} from '../../request'\n  import { login, logout, currentSession, removeCode } from './UserSession'\n  \n  \n  const {\n    SIGNIN,\n    \n    RESTORE_SESSION,\n    LOGOUT\n  } = actions\n  \n  function* requestSignin(action: SignInAction) {\n    const credentials: SignInVariables = {\n      email: action.data.email.toLowerCase(),\n      password: action.data.password,\n    }\n    console.log(credentials)\n    const requestURL = '/api/auth/signin'\n    const signin: RequestReturnParam<SignInResult> = yield call<typeof request>(\n      request,\n      requestURL,\n      'POST',\n      credentials\n    )\n  \n    console.log('signin')\n    console.log(signin)\n  \n    if (signin.success) {\n      const data = (signin as RequestSuccess<SignInResult>).data\n      yield call<typeof login>(login, {\n        user: data.user,\n        jwt: data.token,\n      })\n      //  yield call(registerForPushNotificationsAsync)\n      yield put(signinsuccess(data.user))\n    } else {\n      yield put(signinfailed((signin as RequestFail).message))\n    }\n  }\n  \n  \n  export function* requestLogout(action: LogoutAction) {\n    yield call(logout)\n    yield put(logoutDone())\n  }\n  \n  function* requestRestoreSession(action: RestoreSessionAction) {\n    const session = yield call(currentSession)\n    console.log(session)\n  \n    yield put(restoreSessionSuccess(session))\n  }\n  \n  function* restoreSessionSaga() {\n    yield takeLatest(RESTORE_SESSION, requestRestoreSession)\n  }\n  \n  function* signinSaga() {\n    yield takeLatest(SIGNIN, requestSignin)\n  }\n  \n  function* logoutSaga() {\n    yield takeLatest(LOGOUT, requestLogout)\n  }\n  \n  \n  function* mainSaga() {\n    yield all([\n      call(signinSaga),\n      call(restoreSessionSaga),\n      call(logoutSaga)\n    ])\n  }\n  \n  export default mainSaga\n  "]},"metadata":{},"sourceType":"module"}